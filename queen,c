#include<stdio.h>
#include<stdlib.h>
#include<math.h>

#define N 8
int a[N];   //第a[i]行的皇后(存储皇后的列号)

//判断是否可以有皇后
int queencheck(int line)
{
          //以行为循环读取列的信息，判断是否用列的重合
          for (int i = 0; i < line; ++i)
          {
                    //判断是否在同一列，同意对角线
                    //a[i] = a[line]判断是否列重合
                    if (a[i] == a[line] || abs(line - i) == abs(a[line] - a[i]))
                    {
                              return 0;
                    }
          }
          return 1;
}

void display()
{
          int data[N][N] = { 0 };
          static int t = 1;  //第几次解
          printf("第%d个解法", t++);
          for (int i = 0; i< N; ++i)
          {
                    data[i][a[i]] = 1;   //皇后的位置
          }
          printf("\n");
          for (int i = 0; i<N; ++i)
          {
                    for (int j = 0; j < N; ++j)
                    {
                              if (data[i][j] == 1)
                              {
                                        printf("●");
                              }
                              else
                              {
                                        printf("○");
                              }
                    }
                    printf("\n");
          }
}

void queenmain(int line)
{
          if (line == N)   //当line达到8的时候
          {
                    return;
          }
          else
          {
                    for (int i = 0; i < N; ++i)  //第line行放置第N个皇后
                    {
                              a[line] = i;    //存放（line,i）皇后的坐标
                              if (queencheck(line))
                              {
                                        if (line==N-1)   //全部找完
                                        {
                                                  display();
                                        }
                                        else
                                        {
                                                  queenmain(line + 1);   //去下一行
                                        }
                              }
                    }
          }
}

int main()
{
          queenmain(0);
          system("pause");
          return 0;
}
